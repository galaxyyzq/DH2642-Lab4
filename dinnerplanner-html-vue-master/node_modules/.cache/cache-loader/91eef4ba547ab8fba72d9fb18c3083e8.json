{"remainingRequest":"C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\src\\components\\Sidebar.vue","dependencies":[{"path":"C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\src\\components\\Sidebar.vue","mtime":1521132270310},{"path":"C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\package.json","mtime":1521151124189},{"path":"C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1521148147048},{"path":"C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\zjgz\\Documents\\GitHub\\DH2642-Lab4\\dinnerplanner-html-vue-master\\node_modules\\vue-loader\\lib\\selector.js","mtime":1514695968000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['model'],\n  // this methods is called by React lifecycle when the \n  // component is created that's a good place to setup model observer\n  created: function created() {\n    this.model.addObserver(this);\n  },\n  // this is called when component is removed destroyed\n  // good place to remove observer\n  beforeDestroy: function beforeDestroy() {\n    this.model.removeObserver(this);\n  },\n  // we define and initalise the data we want to use and modify in the component\n  data: function data() {\n    return {\n      numberOfGuests: this.model.getNumberOfGuests()\n    };\n  },\n  methods: {\n    // in our update function we modify the the property of \n    // the compoented which will cause the component to re-render\n    update: function update() {\n      this.numberOfGuests = this.model.getNumberOfGuests();\n    },\n    // our handler for the input's on change event\n    onDidChangeNumberOfGuests: function onDidChangeNumberOfGuests(e) {\n      this.model.setNumberOfGuests(+e.target.value);\n    }\n  }\n};",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA;UAEA;AACA;AACA;8BACA;2BACA;AAEA;AACA;AACA;0CACA;8BACA;AAEA;AACA;wBACA;;iCAEA,AACA;AAFA;AAIA;;AAEA;AACA;8BACA;uCACA;AAEA;AACA;qEACA;6CACA;AACA,AACA;AAXA;AArBA","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"sidebar\">\r\n    <h3>This is the sidebar</h3>\r\n    <p>\r\n      People: <input :value=\"numberOfGuests\" @input=\"onDidChangeNumberOfGuests\" @change=\"onDidChangeNumberOfGuests\"/>\r\n      <br/>\r\n      Total number of guests: {{ numberOfGuests }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['model'],\r\n    // this methods is called by React lifecycle when the \r\n    // component is created that's a good place to setup model observer\r\n    created() {\r\n      this.model.addObserver(this)\r\n    },\r\n\r\n    // this is called when component is removed destroyed\r\n    // good place to remove observer\r\n    beforeDestroy() {\r\n      this.model.removeObserver(this)\r\n    },\r\n\r\n    // we define and initalise the data we want to use and modify in the component\r\n    data() {\r\n      return {\r\n        numberOfGuests: this.model.getNumberOfGuests()\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      // in our update function we modify the the property of \r\n      // the compoented which will cause the component to re-render\r\n      update() {\r\n        this.numberOfGuests = this.model.getNumberOfGuests()\r\n      },\r\n\r\n      // our handler for the input's on change event\r\n      onDidChangeNumberOfGuests(e) {\r\n        this.model.setNumberOfGuests(+e.target.value)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}